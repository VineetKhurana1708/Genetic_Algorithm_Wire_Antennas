%function [Population]= Geometry_Validation(Population)
clc;clear all;close all;
M=10;
N=105;
global inter;
inter=0;
for i = 1 : M
    for j = 1 : N 
        population.Chromosomes(i).Gene(j) = [ round( rand() ) ];
    end
end

%M = length(Population.Chromosomes);
%N=105;
cord=zeros(7,3);
cord1=zeros(1,5);
for a=1:M
    x=0;
    
      for u=0:5:100
          if (rem(u,3)==0)
              x=x+1;
          end;
          for t=1+u:5+u
            cord1(1,t-u)=population.Chromosomes(a).Gene(t);
          end;
          intval=(power(2,4)*cord1(1,1))+(power(2,3)*cord1(1,2))+(power(2,2)*cord1(1,3))+(power(2,1)*cord1(1,4))+(power(2,0)*cord1(1,5));
          z=rem(t/5,3);
          if z==0
              z=3;
          end;
          cord(x,z)=intval;
      end;
          
for j =1:5
    t=6-j;
for k=1:t
d3intersect(cord(k,:),cord(k+1,:),cord(k+1+6-(7-j),:),cord(k+1+6-(7-j)+1,:),j);
if(inter==1)
    fprintf("intersection");
     population.Chromosomes(a).valid=0;
    break;
end
end
if(inter==1)
    break;
end
end
population.Chromosomes(a).valid=1;
end;
